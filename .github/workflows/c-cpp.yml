name: C/C++ Cross Compiler CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest  # use Linux for better compatibility

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          bison \
          flex \
          libgmp3-dev \
          libmpc-dev \
          libmpfr-dev \
          texinfo \
          wget \
          libisl-dev

    - name: Build binutils
      run: |
        mkdir -p $HOME/opt/cross
        export PREFIX="$HOME/opt/cross"
        export TARGET=i686-elf
        export PATH="$PREFIX/bin:$PATH"

        mkdir -p $HOME/src
        cd $HOME/src

        wget https://ftp.gnu.org/gnu/binutils/binutils-2.40.tar.gz
        tar -xzf binutils-2.40.tar.gz

        mkdir -p build-binutils
        cd build-binutils

        ../binutils-2.40/configure \
          --target=$TARGET \
          --prefix="$PREFIX" \
          --with-sysroot \
          --disable-nls \
          --disable-werror

        make
        make install

    - name: Build gcc (with C and C++)
      run: |
        export PREFIX="$HOME/opt/cross"
        export TARGET=i686-elf
        export PATH="$PREFIX/bin:$PATH"
        cd $HOME/src

        wget https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.gz
        tar -xzf gcc-13.2.0.tar.gz

        cd gcc-13.2.0
        ./contrib/download_prerequisites
        cd ..

        mkdir -p build-gcc
        cd build-gcc

        ../gcc-13.2.0/configure \
          --target=$TARGET \
          --prefix="$PREFIX" \
          --disable-nls \
          --enable-languages=c,c++ \
          --without-headers

        make all-gcc
        make all-target-libgcc
        make install-gcc
        make install-target-libgcc

    - name: Verify i686-elf-g++ exists
      run: |
        export PATH="$HOME/opt/cross/bin:$PATH"
        i686-elf-g++ --version

    - name: Build Kernel
      run: |
        export PATH="$HOME/opt/cross/bin:$PATH"
        mkdir -p kernelcc/obj/common
        i686-elf-g++ -m32 -g -D NovanixKERNEL \
          -I kernelcc/include \
          -Wall -fno-omit-frame-pointer -fno-use-cxa-atexit -nostdlib -fno-builtin \
          -fno-exceptions -fno-rtti -fno-leading-underscore -Wno-write-strings \
          -fpermissive -Wno-unknown-pragmas \
          -I ../include -I ../arch/alpha/include \
          -c -o kernelcc/obj/common/random.o kernelcc/src/common/random.cpp

    - name: Make Install (libcx)
      run: |
        export PATH="$HOME/opt/cross/bin:$PATH"
        cd libcx
        make install

    - name: Make Check (libcx)
      run: |
        export PATH="$HOME/opt/cross/bin:$PATH"
        cd libcx
        make check
